{"ast":null,"code":"var _jsxFileName = \"/Users/brettfitzpatrick/Desktop/Bootcamp/Projects/Mountain-Planner/client/src/pages/Calendar.js\";\nimport React from \"react\";\nimport { Container } from \"../components/Grid\";\n\nfunction Calander() {\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, \"CalendarPickerJS\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"showcase-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"myCalendarWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }, \"currentValue:\", /*#__PURE__*/React.createElement(\"p\", {\n    id: \"current-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, \"currentValue.getDay():\", /*#__PURE__*/React.createElement(\"p\", {\n    id: \"current-day\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, \"currentValue.toDateSring():\", /*#__PURE__*/React.createElement(\"p\", {\n    id: \"current-datestring\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Setup code:\"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"const nextYear = new Date().getFullYear() + 1;\"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"const myCalender = new CalendarPicker('\", /*#__PURE__*/React.createElement(\"span\", {\n    class: \"pink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 53\n    }\n  }, \"#myCalendarWrapper\"), \"', \"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"   // If max  min or min  max then the only available day will be today.\"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"   min: new Date(),\"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"   max: new Date(nextYear, 10) // NOTE: new Date(nextYear, 10) is \\\"Sun Nov 01 nextYear\\\"\"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"});\"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \" \"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"const currentDateElement = document.getElementById('current-date');\"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"currentDateElement.textContent = myCalender.value;\"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \" \"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"const currentDayElement = document.getElementById('current-day');\"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"currentDayElement.textContent = myCalender.value.getDay();\"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \" \"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"const currentToDateString = document.getElementById('current-datestring');\"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"currentToDateString.textContent = myCalender.value.toDateString();\"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \" \"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"myCalender.onValueChange((currentValue) => \"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"   currentDateElement.textContent = currentValue;\"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"   currentDayElement.textContent = currentValue.getDay();\"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"   currentToDateString.textContent = currentValue.toDateString();\"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"   console.log(`The current value of the calendar is: $\", currentValue, \"`);\"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"});\")));\n}\n\nexport default Calendar;","map":{"version":3,"sources":["/Users/brettfitzpatrick/Desktop/Bootcamp/Projects/Mountain-Planner/client/src/pages/Calendar.js"],"names":["React","Container","Calander","currentValue","Calendar"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,oBAA1B;;AAEA,SAASC,QAAT,GAAoB;AAGlB,sBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE;AAAK,IAAA,EAAE,EAAC,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,EAAE,EAAC,mBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACE;AAAG,IAAA,EAAE,EAAC,cAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CACE;AAAG,IAAA,EAAE,EAAC,aAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDACE;AAAG,IAAA,EAAE,EAAC,oBAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,CAFF,CAJF,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAA4C;AAAM,IAAA,KAAK,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA5C,QAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gFAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iGANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAVF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAXF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yEAZF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEAbF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAdF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kFAfF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0EAhBF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAjBF,eAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAlBF,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAnBF,eAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEApBF,eAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yEArBF,eAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEAA6DC,YAA7D,QAtBF,eAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAvBF,CAnBF,CADF;AA+CD;;AAED,eAAeC,QAAf","sourcesContent":["import React from \"react\";\nimport { Container } from \"../components/Grid\";\n\nfunction Calander() {\n\n\n  return (\n    <Container fluid>\n      <h1>CalendarPickerJS</h1>\n\n\n      <div id=\"showcase-wrapper\">\n        <div id=\"myCalendarWrapper\"></div>\n        <div id=\"example\">\n          <h3>currentValue:\n            <p id=\"current-date\"></p>\n          </h3>\n          <h3>currentValue.getDay():\n            <p id=\"current-day\"></p>\n          </h3>\n          <h3>currentValue.toDateSring():\n            <p id=\"current-datestring\"></p>\n          </h3>\n        </div>\n      </div>\n\n      <code>\n        <h3>Setup code:</h3>\n        <pre>const nextYear = new Date().getFullYear() + 1;</pre>\n        <pre>const myCalender = new CalendarPicker('<span class=\"pink\">#myCalendarWrapper</span>', </pre>\n        <pre>   // If max  min or min  max then the only available day will be today.</pre>\n        <pre>   min: new Date(),</pre>\n        <pre>   max: new Date(nextYear, 10) // NOTE: new Date(nextYear, 10) is \"Sun Nov 01 nextYear\"</pre>\n        <pre>});</pre>\n        <pre> </pre>\n        <pre>const currentDateElement = document.getElementById('current-date');</pre>\n        <pre>currentDateElement.textContent = myCalender.value;</pre>\n        <pre> </pre>\n        <pre>const currentDayElement = document.getElementById('current-day');</pre>\n        <pre>currentDayElement.textContent = myCalender.value.getDay();</pre>\n        <pre> </pre>\n        <pre>const currentToDateString = document.getElementById('current-datestring');</pre>\n        <pre>currentToDateString.textContent = myCalender.value.toDateString();</pre>\n        <pre> </pre>\n        <pre>myCalender.onValueChange((currentValue) => </pre>\n        <pre>   currentDateElement.textContent = currentValue;</pre>\n        <pre>   currentDayElement.textContent = currentValue.getDay();</pre>\n        <pre>   currentToDateString.textContent = currentValue.toDateString();</pre>\n        <pre>   console.log(`The current value of the calendar is: ${currentValue}`);</pre>\n        <pre>});</pre>\n      </code>\n    </Container>\n  )\n}\n\nexport default Calendar;"]},"metadata":{},"sourceType":"module"}