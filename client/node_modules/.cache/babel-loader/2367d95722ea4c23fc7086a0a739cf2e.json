{"ast":null,"code":"import _regeneratorRuntime from \"/Users/brettfitzpatrick/Desktop/Bootcamp/Projects/Mountain-Planner/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/brettfitzpatrick/Desktop/Bootcamp/Projects/Mountain-Planner/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/brettfitzpatrick/Desktop/Bootcamp/Projects/Mountain-Planner/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/brettfitzpatrick/Desktop/Bootcamp/Projects/Mountain-Planner/client/src/pages/Mountain.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport MountainCard from \"../components/MountainCard\";\nimport API from \"../utils/API\";\n\nfunction Mountain(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      weatherArray = _useState2[0],\n      setWeatherArray = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      allTrips = _useState4[0],\n      setAllTrips = _useState4[1];\n\n  var hourlyWeather = [];\n  var city = props.city;\n  useEffect(function () {\n    loadWeather();\n  }, []);\n\n  function loadWeather() {\n    var weatherData = [];\n    fetch(\"https://api.openweathermap.org/data/2.5/onecall?lat=\" + props.lat + \"&lon=\" + props.lon + \"&exclude=minutely&units=imperial&appid=9057e02af26cff387f193be4d1eee3ae\").then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      console.log(data);\n\n      for (var i = 1; i < data.daily.length; i++) {\n        var day = new Date(data.daily[i].dt * 1000);\n        var calendarDate = day.getMonth() + 1 + \"/\" + day.getDate() + \"/\" + day.getFullYear();\n        var high = data.daily[i].temp.max;\n        var low = data.daily[i].temp.min;\n        var description = data.daily[i].weather[0].description;\n        var icon = data.daily[i].weather[0].icon;\n        weatherData.push({\n          calendarDate: calendarDate,\n          high: high,\n          low: low,\n          description: description,\n          icon: icon\n        });\n        console.log(weatherData);\n      }\n\n      setWeatherArray(weatherData); //console.log(date.getDate() + (date.getMonth() + 1) + date.getFullYear());\n\n      hourlyWeather = data.daily;\n      console.log(hourlyWeather);\n    });\n  }\n\n  var handleTrips = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(city) {\n      var tripsArray;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              tripsArray = [];\n              _context.next = 3;\n              return API.findAllTrips().then(function (response) {\n                console.log(response);\n                var format = new Date(response.data.trips[0].date);\n                console.log(format.toLocaleDateString);\n\n                for (var i = 0; i < response.data.trips.length; i++) {\n                  if (response.data.trips[i].mountain === city) tripsArray.push(response.data.trips[i]);\n                }\n\n                setAllTrips(tripsArray);\n              }).catch(function (err) {\n                console.log(err);\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleTrips(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"margin-pages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    style: {\n      margin: \"0 auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, props.city), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"7-Day Forecast:\")), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-10 md-offset-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MountainCard, {\n    city: city,\n    hourlyWeather: hourlyWeather,\n    weatherArray: weatherArray,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    onClick: props.resetCity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, \"\\u2190 Back to Home\"))))));\n}\n\nexport default Mountain;","map":{"version":3,"sources":["/Users/brettfitzpatrick/Desktop/Bootcamp/Projects/Mountain-Planner/client/src/pages/Mountain.js"],"names":["React","useEffect","useState","Link","Col","Row","Container","MountainCard","API","Mountain","props","weatherArray","setWeatherArray","allTrips","setAllTrips","hourlyWeather","city","loadWeather","weatherData","fetch","lat","lon","then","response","json","data","console","log","i","daily","length","day","Date","dt","calendarDate","getMonth","getDate","getFullYear","high","temp","max","low","min","description","weather","icon","push","handleTrips","tripsArray","findAllTrips","format","trips","date","toLocaleDateString","mountain","catch","err","margin","resetCity"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport MountainCard from \"../components/MountainCard\";\nimport API from \"../utils/API\";\n\n\nfunction Mountain(props) {\n  const [ weatherArray, setWeatherArray ] = useState([])\n  const [allTrips, setAllTrips] = useState([]);\n\n  let hourlyWeather = [];\n\n  let city = props.city\n  useEffect(() => {\n    loadWeather()\n  }, []);\n\n  function loadWeather() {\n    let weatherData = [];\n    fetch(\"https://api.openweathermap.org/data/2.5/onecall?lat=\" + props.lat + \"&lon=\" + props.lon + \"&exclude=minutely&units=imperial&appid=9057e02af26cff387f193be4d1eee3ae\")\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        for (let i = 1; i < data.daily.length; i++) {\n          let day = new Date(data.daily[i].dt * 1000)\n          let calendarDate = ((day.getMonth()+1)+\"/\"+day.getDate()+\"/\"+day.getFullYear());\n          let high = data.daily[i].temp.max;\n          let low = data.daily[i].temp.min;\n          let description = data.daily[i].weather[0].description;\n          let icon = data.daily[i].weather[0].icon;\n          weatherData.push({\n            calendarDate: calendarDate,\n            high: high,\n            low: low,\n            description: description,\n            icon: icon\n          })\n          console.log(weatherData);\n        }\n        setWeatherArray(weatherData)\n        //console.log(date.getDate() + (date.getMonth() + 1) + date.getFullYear());\n        hourlyWeather = data.daily;\n        console.log(hourlyWeather)\n      })\n  }\n\n  const handleTrips = (async (city) => {\n    let tripsArray = [];\n    await API.findAllTrips()\n      .then(response => {\n        console.log(response);\n        const format = new Date(response.data.trips[0].date);\n        console.log(format.toLocaleDateString);\n        for (let i = 0; i < response.data.trips.length; i++) {\n          if (response.data.trips[i].mountain === city)\n          tripsArray.push(response.data.trips[i]);\n        }\n        setAllTrips(tripsArray);\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  })\n\n  return (\n    <div className=\"margin-pages\">\n      <Container fluid>\n        <div className=\"card\" style={{margin: \"0 auto\"}} >\n          <h1>{props.city}</h1>\n          <Row>\n\n          </Row>\n          <Row>\n            <h1>\n              7-Day Forecast:\n            </h1>\n          </Row>\n          <Row>\n            <Col size=\"md-10 md-offset-1\">\n              <MountainCard\n                city={city}\n                hourlyWeather={hourlyWeather}\n                weatherArray={weatherArray}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col size=\"md-2\">\n              <Link to=\"/\" onClick={props.resetCity}>← Back to Home</Link>\n            </Col>\n          </Row>\n        </div>\n      </Container>\n    </div>\n\n    );\n  }\n\n\nexport default Mountain;\n"]},"metadata":{},"sourceType":"module"}