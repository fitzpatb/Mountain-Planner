{"ast":null,"code":"import _regeneratorRuntime from \"/Users/brettfitzpatrick/Desktop/Bootcamp/Projects/Mountain-Planner/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/brettfitzpatrick/Desktop/Bootcamp/Projects/Mountain-Planner/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/brettfitzpatrick/Desktop/Bootcamp/Projects/Mountain-Planner/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/brettfitzpatrick/Desktop/Bootcamp/Projects/Mountain-Planner/client/src/pages/Mountain.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport MountainCard from \"../components/MountainCard\";\nimport API from \"../utils/API\";\n\nfunction Mountain(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      weatherArray = _useState2[0],\n      setWeatherArray = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      allTrips = _useState4[0],\n      setAllTrips = _useState4[1];\n\n  var hourlyWeather = [];\n  var city = props.city;\n  useEffect(function () {\n    loadWeather();\n    handleTrips(city);\n  }, []);\n\n  function loadWeather() {\n    var weatherData = [];\n    fetch(\"https://api.openweathermap.org/data/2.5/onecall?lat=\" + props.lat + \"&lon=\" + props.lon + \"&exclude=minutely&units=imperial&appid=9057e02af26cff387f193be4d1eee3ae\").then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      console.log(data);\n\n      for (var i = 1; i < data.daily.length; i++) {\n        var day = new Date(data.daily[i].dt * 1000);\n        var calendarDate = day.getMonth() + 1 + \"/\" + day.getDate() + \"/\" + day.getFullYear();\n        var high = data.daily[i].temp.max;\n        var low = data.daily[i].temp.min;\n        var description = data.daily[i].weather[0].description;\n        var icon = data.daily[i].weather[0].icon;\n        weatherData.push({\n          calendarDate: calendarDate,\n          high: high,\n          low: low,\n          description: description,\n          icon: icon\n        });\n        console.log(weatherData);\n      }\n\n      setWeatherArray(weatherData); //console.log(date.getDate() + (date.getMonth() + 1) + date.getFullYear());\n\n      hourlyWeather = data.daily;\n      console.log(hourlyWeather);\n    });\n  }\n\n  var handleTrips = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(city) {\n      var tripsArray;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              tripsArray = [];\n              _context.next = 3;\n              return API.findAllTrips().then(function (response) {\n                console.log(response);\n                var format = new Date(response.data.trips[0].date);\n                console.log(format.toLocaleDateString);\n\n                for (var i = 0; i < response.data.trips.length; i++) {\n                  if (response.data.trips[i].mountain === city) {\n                    tripsArray.push(response.data.trips[i]);\n                  }\n                }\n\n                setAllTrips(tripsArray);\n              }).catch(function (err) {\n                console.log(err);\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleTrips(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var bookLink;\n\n  if (props.loggedIn === true) {\n    bookLink = /*#__PURE__*/React.createElement(Link, {\n      to: \"/day\",\n      style: {\n        marginRight: \"15px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 16\n      }\n    }, \"Book a trip.\");\n  } else {\n    bookLink = /*#__PURE__*/React.createElement(Link, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 16\n      }\n    }, \"Login to book a trip.\");\n  }\n\n  var buttonLink;\n\n  if (props.loggedIn === true) {\n    buttonLink = /*#__PURE__*/React.createElement(Link, {\n      to: \"/profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 18\n      }\n    }, \"Go to your profile to join a trip.\");\n  } else {\n    buttonLink = /*#__PURE__*/React.createElement(Link, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 18\n      }\n    }, \"Login to join a trip.\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"margin-pages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    style: {\n      margin: \"0 auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, props.city), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, \"Upcoming Trips\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, allTrips.map(function (trip, index) {\n    var formatDate = new Date(trip.date);\n    var correctDate = formatDate.toLocaleDateString();\n    var riders;\n\n    if (trip.passengers === null) {\n      riders = \"No Passengers\";\n    } else if (trip.passengers.length === 0) {\n      riders = \"No Passengers\";\n    } else {\n      riders = trip.passengers;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 27\n      }\n    }, trip.driver), \", \", /*#__PURE__*/React.createElement(\"em\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 59\n      }\n    }, /*#__PURE__*/React.createElement(\"u\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 63\n      }\n    }, trip.mountain)), \", \", correctDate, \", Available Seats \", trip.seats), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 23\n      }\n    }, riders.map(function (rider, index) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 27\n        }\n      }, rider);\n    })));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, bookLink, buttonLink)), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, \"7-Day Forecast:\")), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-10 md-offset-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MountainCard, {\n    city: city,\n    hourlyWeather: hourlyWeather,\n    weatherArray: weatherArray,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    onClick: props.resetCity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, \"\\u2190 Back to Home\"))))));\n}\n\nexport default Mountain;","map":{"version":3,"sources":["/Users/brettfitzpatrick/Desktop/Bootcamp/Projects/Mountain-Planner/client/src/pages/Mountain.js"],"names":["React","useEffect","useState","Link","Col","Row","Container","MountainCard","API","Mountain","props","weatherArray","setWeatherArray","allTrips","setAllTrips","hourlyWeather","city","loadWeather","handleTrips","weatherData","fetch","lat","lon","then","response","json","data","console","log","i","daily","length","day","Date","dt","calendarDate","getMonth","getDate","getFullYear","high","temp","max","low","min","description","weather","icon","push","tripsArray","findAllTrips","format","trips","date","toLocaleDateString","mountain","catch","err","bookLink","loggedIn","marginRight","buttonLink","margin","map","trip","index","formatDate","correctDate","riders","passengers","driver","seats","rider","resetCity"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport MountainCard from \"../components/MountainCard\";\nimport API from \"../utils/API\";\n\n\nfunction Mountain(props) {\n  const [ weatherArray, setWeatherArray ] = useState([])\n  const [allTrips, setAllTrips] = useState([]);\n\n  let hourlyWeather = [];\n\n  let city = props.city\n  useEffect(() => {\n    loadWeather()\n    handleTrips(city)\n  }, []);\n\n  function loadWeather() {\n    let weatherData = [];\n    fetch(\"https://api.openweathermap.org/data/2.5/onecall?lat=\" + props.lat + \"&lon=\" + props.lon + \"&exclude=minutely&units=imperial&appid=9057e02af26cff387f193be4d1eee3ae\")\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        for (let i = 1; i < data.daily.length; i++) {\n          let day = new Date(data.daily[i].dt * 1000)\n          let calendarDate = ((day.getMonth()+1)+\"/\"+day.getDate()+\"/\"+day.getFullYear());\n          let high = data.daily[i].temp.max;\n          let low = data.daily[i].temp.min;\n          let description = data.daily[i].weather[0].description;\n          let icon = data.daily[i].weather[0].icon;\n          weatherData.push({\n            calendarDate: calendarDate,\n            high: high,\n            low: low,\n            description: description,\n            icon: icon\n          })\n          console.log(weatherData);\n        }\n        setWeatherArray(weatherData)\n        //console.log(date.getDate() + (date.getMonth() + 1) + date.getFullYear());\n        hourlyWeather = data.daily;\n        console.log(hourlyWeather)\n      })\n  }\n\n  const handleTrips = (async (city) => {\n    let tripsArray = [];\n    await API.findAllTrips()\n      .then(response => {\n        console.log(response);\n        const format = new Date(response.data.trips[0].date);\n        console.log(format.toLocaleDateString);\n        for (let i = 0; i < response.data.trips.length; i++) {\n          if (response.data.trips[i].mountain === city) {\n            tripsArray.push(response.data.trips[i]);\n          }\n        }\n        setAllTrips(tripsArray);\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  })\n  let bookLink;\n  if (props.loggedIn === true){\n    bookLink = <Link to=\"/day\" style={{marginRight: \"15px\"}}>Book a trip.</Link>\n  } else {\n    bookLink = <Link to=\"/login\">Login to book a trip.</Link>\n  }\n  let buttonLink;\n  if (props.loggedIn === true){\n    buttonLink = <Link to=\"/profile\">Go to your profile to join a trip.</Link>\n  } else {\n    buttonLink = <Link to=\"/login\">Login to join a trip.</Link>\n  }\n\n  return (\n    <div className=\"margin-pages\">\n      <Container fluid>\n        <div className=\"card\" style={{margin: \"0 auto\"}} >\n          <h1>{props.city}</h1>\n          <div className=\"card\">\n              <div className=\"card-header\">\n                Upcoming Trips\n              </div>\n              <div className=\"card-body\">\n                <ul>\n                {allTrips.map((trip, index) => {\n                  const formatDate = new Date(trip.date);\n\n                  const correctDate = formatDate.toLocaleDateString();\n\n                  let riders;\n                  if (trip.passengers === null) {\n                    riders = \"No Passengers\"\n                  } else  if (trip.passengers.length === 0) {\n                    riders = \"No Passengers\"\n                  } else {\n                    riders = trip.passengers;\n                  }\n\n\n                  return(\n                    <div key={index}>\n                      <li><strong>{trip.driver}</strong>, <em><u>{trip.mountain}</u></em>, {correctDate}, Available Seats {trip.seats}</li>\n\n                      <ul>\n                      {riders.map((rider, index) => {\n                        return(\n                          <li key={index}>{rider}</li>\n                        )\n                      })}\n                      </ul>\n                    </div>\n                  )\n                })}\n                </ul>\n\n              </div>\n              <div className=\"card-footer\">\n                {bookLink}\n                {buttonLink}\n              </div>\n          </div>\n          <Row>\n\n          </Row>\n          <Row>\n            <h1>\n              7-Day Forecast:\n            </h1>\n          </Row>\n          <Row>\n            <Col size=\"md-10 md-offset-1\">\n              <MountainCard\n                city={city}\n                hourlyWeather={hourlyWeather}\n                weatherArray={weatherArray}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col size=\"md-2\">\n              <Link to=\"/\" onClick={props.resetCity}>← Back to Home</Link>\n            </Col>\n          </Row>\n        </div>\n      </Container>\n    </div>\n\n    );\n  }\n\n\nexport default Mountain;\n"]},"metadata":{},"sourceType":"module"}