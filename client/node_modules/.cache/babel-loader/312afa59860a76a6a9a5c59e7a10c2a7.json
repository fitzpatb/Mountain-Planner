{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  // Gets all books\n  getWeather: function getWeather(city) {\n    return axios.get(\"api.openweathermap.org/data/2.5/forecast?q=\" + city + \",co&appid=9057e02af26cff387f193be4d1eee3ae\");\n  },\n  bookTrip: function bookTrip(username, mountain, date, seats) {\n    return axios.post(\"/api/trips/book\", {\n      username: username,\n      mountain: mountain,\n      date: date,\n      seats: seats\n    });\n  },\n  findAllTrips: function findAllTrips() {\n    return axios.get(\"/api/trips/all\");\n  },\n  findUserCar: function findUserCar() {\n    return axios.get(\"/api/cars/usercar\");\n  },\n  joinTrip: function joinTrip(id, username) {\n    return axios.post(\"/api/trips/\" + id, {\n      username: username\n    });\n  },\n  deleteTrip: function deleteTrip(id) {\n    return axios.delete(\"/api/trips/\" + id);\n  },\n  removePassenger: function removePassenger(id, username) {\n    return axios.put(\"/api/trips/\" + id, {\n      username: username\n    });\n  },\n  // Saves a book to the database\n  signupCar: function signupCar(username, make, model, year, color, seats) {\n    return axios.post(\"/api/cars/register\", {\n      username: username,\n      make: make,\n      model: model,\n      year: year,\n      color: color,\n      seats: seats\n    });\n  },\n  login: function login(username, password) {\n    return axios.post(\"/api/users/login\", {\n      username: username,\n      password: password\n    });\n  },\n  signup: function signup(firstname, lastname, username, email, password) {\n    return axios.post(\"/api/users/signup\", {\n      firstname: firstname,\n      lastname: lastname,\n      username: username,\n      email: email,\n      password: password\n    });\n  },\n  findUser: function findUser(id) {\n    return axios.get(\"/api/users/driver\", {\n      id: id\n    });\n  }\n};","map":{"version":3,"sources":["/Users/brettfitzpatrick/Desktop/Bootcamp/Projects/Mountain-Planner/client/src/utils/API.js"],"names":["axios","getWeather","city","get","bookTrip","username","mountain","date","seats","post","findAllTrips","findUserCar","joinTrip","id","deleteTrip","delete","removePassenger","put","signupCar","make","model","year","color","login","password","signup","firstname","lastname","email","findUser"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;AACb;AACAC,EAAAA,UAAU,EAAE,oBAASC,IAAT,EAAe;AACzB,WAAOF,KAAK,CAACG,GAAN,CAAU,gDAAgDD,IAAhD,GAAuD,4CAAjE,CAAP;AACD,GAJY;AAMbE,EAAAA,QAAQ,EAAE,kBAASC,QAAT,EAAmBC,QAAnB,EAA6BC,IAA7B,EAAmCC,KAAnC,EAA0C;AAClD,WAAOR,KAAK,CAACS,IAAN,CAAW,iBAAX,EAA8B;AAAEJ,MAAAA,QAAQ,EAARA,QAAF;AAAYC,MAAAA,QAAQ,EAARA,QAAZ;AAAsBC,MAAAA,IAAI,EAAJA,IAAtB;AAA4BC,MAAAA,KAAK,EAALA;AAA5B,KAA9B,CAAP;AACD,GARY;AASbE,EAAAA,YAAY,EAAE,wBAAW;AACvB,WAAOV,KAAK,CAACG,GAAN,CAAU,gBAAV,CAAP;AACD,GAXY;AAYbQ,EAAAA,WAAW,EAAE,uBAAW;AACtB,WAAOX,KAAK,CAACG,GAAN,CAAU,mBAAV,CAAP;AACD,GAdY;AAebS,EAAAA,QAAQ,EAAE,kBAASC,EAAT,EAAaR,QAAb,EAAuB;AAC/B,WAAOL,KAAK,CAACS,IAAN,CAAW,gBAAgBI,EAA3B,EAA+B;AAACR,MAAAA,QAAQ,EAAEA;AAAX,KAA/B,CAAP;AACD,GAjBY;AAkBbS,EAAAA,UAAU,EAAE,oBAASD,EAAT,EAAa;AACvB,WAAOb,KAAK,CAACe,MAAN,CAAa,gBAAgBF,EAA7B,CAAP;AACD,GApBY;AAqBbG,EAAAA,eAAe,EAAE,yBAASH,EAAT,EAAaR,QAAb,EAAuB;AACtC,WAAOL,KAAK,CAACiB,GAAN,CAAU,gBAAgBJ,EAA1B,EAA8B;AAACR,MAAAA,QAAQ,EAAEA;AAAX,KAA9B,CAAP;AACD,GAvBY;AAwBb;AACAa,EAAAA,SAAS,EAAE,mBAASb,QAAT,EAAmBc,IAAnB,EAAyBC,KAAzB,EAAgCC,IAAhC,EAAsCC,KAAtC,EAA6Cd,KAA7C,EAAoD;AAC7D,WAAOR,KAAK,CAACS,IAAN,CAAW,oBAAX,EAAiC;AAAEJ,MAAAA,QAAQ,EAARA,QAAF;AAAYc,MAAAA,IAAI,EAAJA,IAAZ;AAAkBC,MAAAA,KAAK,EAALA,KAAlB;AAAyBC,MAAAA,IAAI,EAAJA,IAAzB;AAA+BC,MAAAA,KAAK,EAALA,KAA/B;AAAsCd,MAAAA,KAAK,EAALA;AAAtC,KAAjC,CAAP;AACD,GA3BY;AA4Bbe,EAAAA,KAAK,EAAE,eAASlB,QAAT,EAAmBmB,QAAnB,EAA6B;AAClC,WAAOxB,KAAK,CAACS,IAAN,CAAW,kBAAX,EAA+B;AAAEJ,MAAAA,QAAQ,EAARA,QAAF;AAAYmB,MAAAA,QAAQ,EAARA;AAAZ,KAA/B,CAAP;AACD,GA9BY;AA+BbC,EAAAA,MAAM,EAAE,gBAASC,SAAT,EAAoBC,QAApB,EAA8BtB,QAA9B,EAAwCuB,KAAxC,EAA+CJ,QAA/C,EAAyD;AAC/D,WAAOxB,KAAK,CAACS,IAAN,CAAW,mBAAX,EAAgC;AAAEiB,MAAAA,SAAS,EAATA,SAAF;AAAaC,MAAAA,QAAQ,EAARA,QAAb;AAAuBtB,MAAAA,QAAQ,EAARA,QAAvB;AAAiCuB,MAAAA,KAAK,EAALA,KAAjC;AAAwCJ,MAAAA,QAAQ,EAARA;AAAxC,KAAhC,CAAP;AACD,GAjCY;AAkCbK,EAAAA,QAAQ,EAAE,kBAAShB,EAAT,EAAa;AACrB,WAAOb,KAAK,CAACG,GAAN,CAAU,mBAAV,EAA+B;AAACU,MAAAA,EAAE,EAAFA;AAAD,KAA/B,CAAP;AACD;AApCY,CAAf","sourcesContent":["import axios from \"axios\";\n\nexport default {\n  // Gets all books\n  getWeather: function(city) {\n    return axios.get(\"api.openweathermap.org/data/2.5/forecast?q=\" + city + \",co&appid=9057e02af26cff387f193be4d1eee3ae\");\n  },\n\n  bookTrip: function(username, mountain, date, seats) {\n    return axios.post(\"/api/trips/book\", { username, mountain, date, seats });\n  },\n  findAllTrips: function() {\n    return axios.get(\"/api/trips/all\");\n  },\n  findUserCar: function() {\n    return axios.get(\"/api/cars/usercar\");\n  },\n  joinTrip: function(id, username) {\n    return axios.post(\"/api/trips/\" + id, {username: username})\n  },\n  deleteTrip: function(id) {\n    return axios.delete(\"/api/trips/\" + id)\n  },\n  removePassenger: function(id, username) {\n    return axios.put(\"/api/trips/\" + id, {username: username})\n  },\n  // Saves a book to the database\n  signupCar: function(username, make, model, year, color, seats) {\n    return axios.post(\"/api/cars/register\", { username, make, model, year, color, seats });\n  },\n  login: function(username, password) {\n    return axios.post(\"/api/users/login\", { username, password });\n  },\n  signup: function(firstname, lastname, username, email, password) {\n    return axios.post(\"/api/users/signup\", { firstname, lastname, username, email, password});\n  },\n  findUser: function(id) {\n    return axios.get(\"/api/users/driver\", {id})\n  }\n\n};\n"]},"metadata":{},"sourceType":"module"}