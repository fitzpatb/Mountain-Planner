{"ast":null,"code":"var _jsxFileName = \"/Users/brettfitzpatrick/Desktop/Bootcamp/Projects/Mountain-Planner/client/src/pages/Calendar.js\";\nimport React from \"react\";\nimport { Container } from \"../components/Grid\";\n\nfunction Calendar() {\n  if (!Element.prototype.matches) {\n    Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n  }\n\n  if (!Element.prototype.closest) {\n    Element.prototype.closest = function (s) {\n      var el = this;\n\n      do {\n        if (Element.prototype.matches.call(el, s)) return el;\n        el = el.parentElement || el.parentNode;\n      } while (el !== null && el.nodeType === 1);\n\n      return null;\n    };\n  }\n  /**\n   * @class CalendarPicker.\n   * @description Provides a simple way to get a minimalistic calender in your DOM.\n   * @author Mathias Picker - 29 July 2020.\n   */\n\n\n  function CalendarPicker(element, options) {\n    // Core variables.\n    this.date = new Date();\n\n    this._formatDateToInit(this.date);\n\n    this.day = this.date.getDay();\n    this.month = this.date.getMonth();\n    this.year = this.date.getFullYear(); // Storing the todays date for practical reasons.\n\n    this.today = this.date; // The calendars value should always be the current date.\n\n    this.value = this.date; // Ranges for the calendar (optional).\n\n    this.min = options.min;\n    this.max = options.max;\n\n    this._formatDateToInit(this.min);\n\n    this._formatDateToInit(this.max); // Element to insert calendar in.\n\n\n    this.userElement = document.querySelector(element); // Setting current date as readable text.\n\n    this._setDateText(); // The elements used to build the calendar.\n\n\n    this.calendarWrapper = document.createElement('div');\n    this.calendarElement = document.createElement('div');\n    this.calendarHeader = document.createElement('header');\n    this.calendarHeaderTitle = document.createElement('h4');\n    this.navigationWrapper = document.createElement('section');\n    this.previousMonthArrow = document.createElement('button');\n    this.nextMonthArrow = document.createElement('button');\n    this.calendarGridDays = document.createElement('section');\n    this.calendarGrid = document.createElement('section');\n    this.calendarDayElementType = 'time'; // Hard-coded list of all days.\n\n    this.listOfAllDaysAsText = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']; // Hard-coded list of all months.\n\n    this.listOfAllMonthsAsText = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']; // Creating the calendar\n\n    this.calendarWrapper.id = 'calendar-wrapper';\n    this.calendarElement.id = 'calendar';\n    this.calendarGridDays.id = 'calendar-days';\n    this.calendarGrid.id = 'calendar-grid';\n    this.navigationWrapper.id = 'navigation-wrapper';\n    this.previousMonthArrow.id = 'previous-month';\n    this.nextMonthArrow.id = 'next-month';\n\n    this._insertHeaderIntoCalendarWrapper();\n\n    this._insertCalendarGridDaysHeader();\n\n    this._insertDaysIntoGrid();\n\n    this._insertNavigationButtons();\n\n    this._insertCalendarIntoWrapper();\n\n    this.userElement.appendChild(this.calendarWrapper);\n  }\n  /**\n   * @param {Number} The month number, 0 based.\n   * @param {Number} The year, not zero based, required to account for leap years.\n   * @return {Array<Date>} List with date objects for each day of the month.\n   * @author Juan Mendes - 30th October 2012.\n   */\n\n\n  CalendarPicker.prototype._getDaysInMonth = function (month, year) {\n    if (!month && month !== 0 || !year && year !== 0) return;\n    var date = new Date(year, month, 1);\n    var days = [];\n\n    while (date.getMonth() === month) {\n      days.push(new Date(date));\n      date.setDate(date.getDate() + 1);\n    }\n\n    return days;\n  };\n  /**\n   * @param {DateObject} date.\n   * @description Sets the clock of a date to 00:00:00 to be consistent.\n   */\n\n\n  CalendarPicker.prototype._formatDateToInit = function (date) {\n    if (!date) return;\n    date.setHours(0, 0, 0);\n  };\n  /**\n   * @description Sets the current date as readable text in their own variables\n   */\n\n\n  CalendarPicker.prototype._setDateText = function () {\n    // Setting current date as readable text.\n    var dateData = this.date.toString().split(' ');\n    this.dayAsText = dateData[0];\n    this.monthAsText = dateData[1];\n    this.dateAsText = dateData[2];\n    this.yearAsText = dateData[3];\n  };\n  /**\n   * @description Inserts the calendar into the wrapper and adds eventListeners for the calender-grid.\n   */\n\n\n  CalendarPicker.prototype._insertCalendarIntoWrapper = function () {\n    var _this = this;\n\n    this.calendarWrapper.appendChild(this.calendarElement);\n    /**\n     * @param {Event} event An event from an eventListener.\n     */\n\n    var handleSelectedElement = function handleSelectedElement(event) {\n      if (event.target.nodeName.toLowerCase() === _this.calendarDayElementType && !event.target.classList.contains('disabled')) {\n        // Removes the 'selected' class from all elements that have it.\n        Array.from(document.querySelectorAll('.selected')).forEach(function (element) {\n          return element.classList.remove('selected');\n        }); // Adds the 'selected'-class to the selected date.\n\n        event.target.classList.add('selected');\n        _this.value = event.target.value; // Fires the onValueChange function with the provided callback.\n\n        _this.onValueChange(_this.callback);\n      }\n    };\n\n    this.calendarGrid.addEventListener('click', handleSelectedElement, false);\n    this.calendarGrid.addEventListener('keydown', function (keyEvent) {\n      if (keyEvent.key !== 'Enter') return;\n      handleSelectedElement(keyEvent);\n    }, false);\n  };\n  /**\n   * @description Adds the \"main\" calendar-header.\n   */\n\n\n  CalendarPicker.prototype._insertHeaderIntoCalendarWrapper = function () {\n    this.calendarHeaderTitle.textContent = this.listOfAllMonthsAsText[this.month] + ' - ' + this.year;\n    this.calendarHeader.appendChild(this.calendarHeaderTitle);\n    this.calendarWrapper.appendChild(this.calendarHeader);\n  };\n  /**\n   * @description Inserts the calendar-grid header with all the weekdays.\n   */\n\n\n  CalendarPicker.prototype._insertCalendarGridDaysHeader = function () {\n    var _this2 = this;\n\n    this.listOfAllDaysAsText.forEach(function (day) {\n      var dayElement = document.createElement('span');\n      dayElement.textContent = day;\n\n      _this2.calendarGridDays.appendChild(dayElement);\n    });\n    this.calendarElement.appendChild(this.calendarGridDays);\n  };\n  /**\n   * @description Adds the \"Previous\" and \"Next\" arrows on the side-navigation.\n   * Also inits the click-events used to navigating.\n   */\n\n\n  CalendarPicker.prototype._insertNavigationButtons = function () {\n    // Ugly long string, but at least the svg is pretty.\n    var arrowSvg = '<svg enable-background=\"new 0 0 386.257 386.257\" viewBox=\"0 0 386.257 386.257\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m0 96.879 193.129 192.5 193.128-192.5z\"/></svg>';\n    this.previousMonthArrow.innerHTML = arrowSvg;\n    this.nextMonthArrow.innerHTML = arrowSvg;\n    this.previousMonthArrow.setAttribute('aria-label', 'Go to previous month');\n    this.nextMonthArrow.setAttribute('aria-label', 'Go to next month');\n    this.navigationWrapper.appendChild(this.previousMonthArrow);\n    this.navigationWrapper.appendChild(this.nextMonthArrow); // Cannot use arrow-functions for IE support :(\n\n    var that = this;\n    this.navigationWrapper.addEventListener('click', function (clickEvent) {\n      if (clickEvent.target.closest('#' + that.previousMonthArrow.id)) {\n        if (that.month === 0) {\n          that.month = 11;\n          that.year -= 1;\n        } else {\n          that.month -= 1;\n        }\n\n        that._updateCalendar();\n      }\n\n      if (clickEvent.target.closest('#' + that.nextMonthArrow.id)) {\n        if (that.month === 11) {\n          that.month = 0;\n          that.year += 1;\n        } else {\n          that.month += 1;\n        }\n\n        that._updateCalendar();\n      }\n    }, false);\n    that.calendarElement.appendChild(that.navigationWrapper);\n  };\n  /**\n   * @description Adds all the days for current month into the calendar-grid.\n   * Takes into account which day the month starts on, so that \"empty/placeholder\" days can be added\n   * in case the month for example starts on a Thursday.\n   * Also disables the days that are not within the provided.\n   */\n\n\n  CalendarPicker.prototype._insertDaysIntoGrid = function () {\n    var _this3 = this;\n\n    this.calendarGrid.innerHTML = '';\n\n    var arrayOfDays = this._getDaysInMonth(this.month, this.year);\n\n    var firstDayOfMonth = arrayOfDays[0].getDay(); // Converting Sunday (0 when using getDay()) to 7 to make it easier to work with.\n\n    firstDayOfMonth = firstDayOfMonth === 0 ? 7 : firstDayOfMonth;\n\n    if (1 < firstDayOfMonth) {\n      arrayOfDays = Array(firstDayOfMonth - 1).fill(false, 0).concat(arrayOfDays);\n    }\n\n    arrayOfDays.forEach(function (date) {\n      var dateElement = document.createElement(date ? _this3.calendarDayElementType : 'span');\n      var Date = date.toString().split(' ')[2];\n      var dateIsTheCurrentValue = _this3.value.toString() === date.toString();\n      if (dateIsTheCurrentValue) _this3.activeDateElement = dateElement;\n\n      var dateIsBetweenAllowedRange = (_this3.min || _this3.max) && date.toString() !== _this3.today.toString() && (date < _this3.min || date > _this3.max);\n\n      if (dateIsBetweenAllowedRange) {\n        dateElement.classList.add('disabled');\n      } else {\n        dateElement.tabIndex = 0;\n        dateElement.value = date;\n      }\n\n      dateElement.textContent = date ? Date : '';\n\n      _this3.calendarGrid.appendChild(dateElement);\n    });\n    this.calendarElement.appendChild(this.calendarGrid);\n    this.activeDateElement.classList.add('selected');\n  };\n  /**\n   * @description Updates the core-values for the calendar based on the new month and year\n   * given by the navigation. Also updates the UI with the new values.\n   */\n\n\n  CalendarPicker.prototype._updateCalendar = function () {\n    this.date = new Date(this.year, this.month);\n\n    this._setDateText();\n\n    this.day = this.date.getDay();\n    this.month = this.date.getMonth();\n    this.year = this.date.getFullYear(); // Cannot use arrow-functions for IE support :(\n\n    var that = this;\n    window.requestAnimationFrame(function () {\n      that.calendarHeaderTitle.textContent = that.listOfAllMonthsAsText[that.month] + ' - ' + that.year;\n\n      that._insertDaysIntoGrid();\n    });\n  };\n  /**\n   * @param {Function} callback\n   * @description A \"listener\" that lets the user do something everytime the value changes.\n   */\n\n\n  CalendarPicker.prototype.onValueChange = function (callback) {\n    if (this.callback) return this.callback(this.value);\n    this.callback = callback;\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"showcase-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"myCalendarWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 11\n    }\n  }, \"currentValue:\", /*#__PURE__*/React.createElement(\"p\", {\n    id: \"current-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 11\n    }\n  }, \"currentValue.getDay():\", /*#__PURE__*/React.createElement(\"p\", {\n    id: \"current-day\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 11\n    }\n  }, \"currentValue.toDateSring():\", /*#__PURE__*/React.createElement(\"p\", {\n    id: \"current-datestring\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default Calendar;","map":{"version":3,"sources":["/Users/brettfitzpatrick/Desktop/Bootcamp/Projects/Mountain-Planner/client/src/pages/Calendar.js"],"names":["React","Container","Calendar","Element","prototype","matches","msMatchesSelector","webkitMatchesSelector","closest","s","el","call","parentElement","parentNode","nodeType","CalendarPicker","element","options","date","Date","_formatDateToInit","day","getDay","month","getMonth","year","getFullYear","today","value","min","max","userElement","document","querySelector","_setDateText","calendarWrapper","createElement","calendarElement","calendarHeader","calendarHeaderTitle","navigationWrapper","previousMonthArrow","nextMonthArrow","calendarGridDays","calendarGrid","calendarDayElementType","listOfAllDaysAsText","listOfAllMonthsAsText","id","_insertHeaderIntoCalendarWrapper","_insertCalendarGridDaysHeader","_insertDaysIntoGrid","_insertNavigationButtons","_insertCalendarIntoWrapper","appendChild","_getDaysInMonth","days","push","setDate","getDate","setHours","dateData","toString","split","dayAsText","monthAsText","dateAsText","yearAsText","handleSelectedElement","event","target","nodeName","toLowerCase","classList","contains","Array","from","querySelectorAll","forEach","remove","add","onValueChange","callback","addEventListener","keyEvent","key","textContent","dayElement","arrowSvg","innerHTML","setAttribute","that","clickEvent","_updateCalendar","arrayOfDays","firstDayOfMonth","fill","concat","dateElement","dateIsTheCurrentValue","activeDateElement","dateIsBetweenAllowedRange","tabIndex","window","requestAnimationFrame"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Container } from \"../components/Grid\";\n\nfunction Calendar() {\n  if (!Element.prototype.matches) { Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector; }\n  if (!Element.prototype.closest) {\n      Element.prototype.closest = function(s) {\n        var el = this;\n        do {\n          if (Element.prototype.matches.call(el, s)) return el;\n          el = el.parentElement || el.parentNode;\n        } while (el !== null && el.nodeType === 1);\n        return null;\n      };\n  }\n\n  /**\n   * @class CalendarPicker.\n   * @description Provides a simple way to get a minimalistic calender in your DOM.\n   * @author Mathias Picker - 29 July 2020.\n   */\n  function CalendarPicker(element, options) {\n      // Core variables.\n      this.date = new Date();\n      this._formatDateToInit(this.date);\n\n      this.day = this.date.getDay()\n      this.month = this.date.getMonth();\n      this.year = this.date.getFullYear();\n\n      // Storing the todays date for practical reasons.\n      this.today = this.date;\n\n      // The calendars value should always be the current date.\n      this.value = this.date;\n\n      // Ranges for the calendar (optional).\n      this.min = options.min;\n      this.max = options.max;\n      this._formatDateToInit(this.min);\n      this._formatDateToInit(this.max);\n\n      // Element to insert calendar in.\n      this.userElement = document.querySelector(element);\n\n      // Setting current date as readable text.\n      this._setDateText();\n\n      // The elements used to build the calendar.\n      this.calendarWrapper = document.createElement('div');\n      this.calendarElement = document.createElement('div')\n      this.calendarHeader = document.createElement('header');\n      this.calendarHeaderTitle = document.createElement('h4');\n      this.navigationWrapper = document.createElement('section')\n      this.previousMonthArrow = document.createElement('button');\n      this.nextMonthArrow = document.createElement('button');\n      this.calendarGridDays = document.createElement('section')\n      this.calendarGrid = document.createElement('section');\n      this.calendarDayElementType = 'time';\n\n      // Hard-coded list of all days.\n      this.listOfAllDaysAsText = [\n          'Monday',\n          'Tuesday',\n          'Wednesday',\n          'Thursday',\n          'Friday',\n          'Saturday',\n          'Sunday'\n      ];\n\n      // Hard-coded list of all months.\n      this.listOfAllMonthsAsText = [\n          'January',\n          'February',\n          'March',\n          'April',\n          'May',\n          'June',\n          'July',\n          'August',\n          'September',\n          'October',\n          'November',\n          'December'\n      ];\n\n      // Creating the calendar\n      this.calendarWrapper.id = 'calendar-wrapper';\n      this.calendarElement.id = 'calendar';\n      this.calendarGridDays.id = 'calendar-days';\n      this.calendarGrid.id = 'calendar-grid';\n      this.navigationWrapper.id = 'navigation-wrapper';\n      this.previousMonthArrow.id = 'previous-month';\n      this.nextMonthArrow.id = 'next-month';\n\n      this._insertHeaderIntoCalendarWrapper();\n      this._insertCalendarGridDaysHeader();\n      this._insertDaysIntoGrid();\n      this._insertNavigationButtons();\n      this._insertCalendarIntoWrapper();\n\n      this.userElement.appendChild(this.calendarWrapper);\n  }\n\n\n  /**\n   * @param {Number} The month number, 0 based.\n   * @param {Number} The year, not zero based, required to account for leap years.\n   * @return {Array<Date>} List with date objects for each day of the month.\n   * @author Juan Mendes - 30th October 2012.\n   */\n  CalendarPicker.prototype._getDaysInMonth = function (month, year) {\n      if ((!month && month !== 0) || (!year && year !== 0)) return;\n\n      var date = new Date(year, month, 1);\n      var days = [];\n\n      while (date.getMonth() === month) {\n          days.push(new Date(date));\n          date.setDate(date.getDate() + 1);\n      }\n      return days;\n  }\n\n  /**\n   * @param {DateObject} date.\n   * @description Sets the clock of a date to 00:00:00 to be consistent.\n   */\n  CalendarPicker.prototype._formatDateToInit = function (date) {\n      if (!date) return;\n      date.setHours(0, 0, 0);\n  }\n\n  /**\n   * @description Sets the current date as readable text in their own variables\n   */\n  CalendarPicker.prototype._setDateText = function () {\n      // Setting current date as readable text.\n      var dateData = this.date.toString().split(' ');\n      this.dayAsText = dateData[0];\n      this.monthAsText = dateData[1];\n      this.dateAsText = dateData[2];\n      this.yearAsText = dateData[3];\n  }\n\n  /**\n   * @description Inserts the calendar into the wrapper and adds eventListeners for the calender-grid.\n   */\n  CalendarPicker.prototype._insertCalendarIntoWrapper = function () {\n      this.calendarWrapper.appendChild(this.calendarElement);\n\n      /**\n       * @param {Event} event An event from an eventListener.\n       */\n      var handleSelectedElement = (event) => {\n          if (event.target.nodeName.toLowerCase() === this.calendarDayElementType && !event.target.classList.contains('disabled')) {\n\n              // Removes the 'selected' class from all elements that have it.\n              Array.from(document.querySelectorAll('.selected')).forEach(element => element.classList.remove('selected'));\n\n              // Adds the 'selected'-class to the selected date.\n              event.target.classList.add('selected');\n\n              this.value = event.target.value;\n\n              // Fires the onValueChange function with the provided callback.\n              this.onValueChange(this.callback);\n          }\n      }\n\n      this.calendarGrid.addEventListener('click', handleSelectedElement, false);\n\n      this.calendarGrid.addEventListener('keydown', (keyEvent) => {\n          if (keyEvent.key !== 'Enter') return;\n\n          handleSelectedElement(keyEvent);\n      }, false);\n  }\n\n  /**\n   * @description Adds the \"main\" calendar-header.\n   */\n  CalendarPicker.prototype._insertHeaderIntoCalendarWrapper = function () {\n      this.calendarHeaderTitle.textContent = this.listOfAllMonthsAsText[this.month] + ' - ' + this.year;\n      this.calendarHeader.appendChild(this.calendarHeaderTitle);\n      this.calendarWrapper.appendChild(this.calendarHeader);\n  }\n\n  /**\n   * @description Inserts the calendar-grid header with all the weekdays.\n   */\n  CalendarPicker.prototype._insertCalendarGridDaysHeader = function () {\n      this.listOfAllDaysAsText.forEach(day => {\n          var dayElement = document.createElement('span');\n          dayElement.textContent = day;\n          this.calendarGridDays.appendChild(dayElement);\n      })\n\n      this.calendarElement.appendChild(this.calendarGridDays);\n  }\n\n  /**\n   * @description Adds the \"Previous\" and \"Next\" arrows on the side-navigation.\n   * Also inits the click-events used to navigating.\n   */\n  CalendarPicker.prototype._insertNavigationButtons = function () {\n      // Ugly long string, but at least the svg is pretty.\n      var arrowSvg = '<svg enable-background=\"new 0 0 386.257 386.257\" viewBox=\"0 0 386.257 386.257\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m0 96.879 193.129 192.5 193.128-192.5z\"/></svg>';\n\n      this.previousMonthArrow.innerHTML = arrowSvg;\n      this.nextMonthArrow.innerHTML = arrowSvg;\n\n      this.previousMonthArrow.setAttribute('aria-label', 'Go to previous month');\n      this.nextMonthArrow.setAttribute('aria-label', 'Go to next month');\n\n      this.navigationWrapper.appendChild(this.previousMonthArrow);\n      this.navigationWrapper.appendChild(this.nextMonthArrow);\n\n      // Cannot use arrow-functions for IE support :(\n      var that = this;\n      this.navigationWrapper.addEventListener('click', function (clickEvent) {\n          if (clickEvent.target.closest('#' + that.previousMonthArrow.id)) {\n              if (that.month === 0) {\n                  that.month = 11;\n                  that.year -= 1;\n              } else {\n                  that.month -= 1;\n              }\n              that._updateCalendar();\n          }\n\n          if (clickEvent.target.closest('#' + that.nextMonthArrow.id)) {\n              if (that.month === 11) {\n                  that.month = 0;\n                  that.year += 1;\n              } else {\n                  that.month += 1;\n              }\n              that._updateCalendar();\n          }\n      }, false)\n\n      that.calendarElement.appendChild(that.navigationWrapper);\n  }\n\n  /**\n   * @description Adds all the days for current month into the calendar-grid.\n   * Takes into account which day the month starts on, so that \"empty/placeholder\" days can be added\n   * in case the month for example starts on a Thursday.\n   * Also disables the days that are not within the provided.\n   */\n  CalendarPicker.prototype._insertDaysIntoGrid = function () {\n      this.calendarGrid.innerHTML = '';\n\n      var arrayOfDays = this._getDaysInMonth(this.month, this.year);\n      var firstDayOfMonth = arrayOfDays[0].getDay();\n\n      // Converting Sunday (0 when using getDay()) to 7 to make it easier to work with.\n      firstDayOfMonth = firstDayOfMonth === 0 ? 7 : firstDayOfMonth;\n\n      if (1 < firstDayOfMonth) {\n          arrayOfDays = Array(firstDayOfMonth - 1).fill(false, 0).concat(arrayOfDays);\n      }\n\n      arrayOfDays.forEach(date => {\n          var dateElement = document.createElement(date ? this.calendarDayElementType : 'span');\n          var Date = date.toString().split(' ')[2];\n\n          var dateIsTheCurrentValue = this.value.toString() === date.toString();\n          if (dateIsTheCurrentValue) this.activeDateElement = dateElement;\n\n          var dateIsBetweenAllowedRange = (this.min || this.max) && (date.toString() !== this.today.toString() && (date < this.min || date > this.max))\n          if (dateIsBetweenAllowedRange) {\n              dateElement.classList.add('disabled');\n          } else {\n              dateElement.tabIndex = 0;\n              dateElement.value = date;\n          }\n\n          dateElement.textContent = date ? Date : '';\n          this.calendarGrid.appendChild(dateElement);\n      })\n\n      this.calendarElement.appendChild(this.calendarGrid);\n      this.activeDateElement.classList.add('selected');\n  }\n\n  /**\n   * @description Updates the core-values for the calendar based on the new month and year\n   * given by the navigation. Also updates the UI with the new values.\n   */\n  CalendarPicker.prototype._updateCalendar = function () {\n      this.date = new Date(this.year, this.month);\n\n      this._setDateText();\n\n      this.day = this.date.getDay();\n      this.month = this.date.getMonth();\n      this.year = this.date.getFullYear();\n\n      // Cannot use arrow-functions for IE support :(\n      var that = this;\n      window.requestAnimationFrame(function () {\n          that.calendarHeaderTitle.textContent = that.listOfAllMonthsAsText[that.month] + ' - ' + that.year;\n          that._insertDaysIntoGrid();\n      })\n  }\n\n  /**\n   * @param {Function} callback\n   * @description A \"listener\" that lets the user do something everytime the value changes.\n   */\n  CalendarPicker.prototype.onValueChange = function (callback) {\n      if (this.callback) return this.callback(this.value);\n      this.callback = callback;\n  }\n\n  return (\n    <Container fluid>\n      <div id=\"showcase-wrapper\">\n        <div id=\"myCalendarWrapper\"></div>\n        <div id=\"example\">\n          <h3>currentValue:\n            <p id=\"current-date\"></p>\n          </h3>\n          <h3>currentValue.getDay():\n            <p id=\"current-day\"></p>\n          </h3>\n          <h3>currentValue.toDateSring():\n            <p id=\"current-datestring\"></p>\n          </h3>\n        </div>\n      </div>\n\n\n    </Container>\n  )\n}\n\nexport default Calendar;"]},"metadata":{},"sourceType":"module"}